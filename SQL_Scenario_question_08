Problem : Find the average time between the page_load and the first scroll_down event from facebook_web_log event 

Input Table : 
| user_id | timestamp           | action      |
|---------|---------------------|-------------|
| 0       | 2019-04-25 13:30:15 | page_load   |
| 0       | 2019-04-25 13:30:40 | scroll_down |
| 0       | 2019-04-25 13:30:45 | scroll_up   |
| 0       | 2019-04-25 13:31:10 | scroll_down |
| 0       | 2019-04-25 13:31:25 | scroll_down |
| 0       | 2019-04-25 13:31:40 | page_exit   |
| 1       | 2019-04-25 13:40:00 | page_load   |
| 1       | 2019-04-25 13:40:10 | scroll_down |

output Table : 
| user_id | timediff |
|---------|----------|
| 0       | 25       |
| 1       | 10       |

solution : step 1 : first we use case stamtment to get page_load and scroll_down action in different column and make as common table expression 
           step 2 : then we will extract seconds poprtion of page_load and scroll down using extract 
 Note : i am write this query in postgresql ( extraction syntax may be different as per DB products)
 
 --select * from facebook_web_log;
with CTE as 
(select user_id , min(case when action='page_load' then timestamp end ) as page_load_time , min(case when action='scroll_down' then timestamp end) as page_scroll_down from facebook_web_log group by user_id)

--select * from CTE

select user_id, EXTRACT(EPOCH from page_scroll_down :: timestamp ) -EXTRACT(EPOCH from page_load_time :: timestamp )  as timediff from CTE
           
           
